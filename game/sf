import tkinter as tk
from logic import GameLogic
from game_vs_AI import Game_vsAI
class TrainGame:
    def __init__(self):
        self.logic = GameLogic()
        self.gameAI = Game_vsAI()
        self.window = tk.Tk()
        self.window.title("Game Tic-Tac-Toe")
        self.window.geometry("700x830")

        self.label_instructions = tk.Label(self.window, text="Select the box and press or press 'a' for playing with AI", font=("Arial", 20), bg="white")
        self.label_instructions.pack(padx=30, pady=20)

        self.label_turn = tk.Label(self.window, text="X goes now", font=("Arial", 15), bg="white")
        self.label_turn.pack(padx=30, pady=0)

        self.canvas = tk.Canvas(self.window, width=600, height=600, bg="white")
        self.canvas.pack(padx=30, pady=50)

        self.canvas.bind("<Button-1>", self.click_box)
        self.window.bind("<g>", self.reset_game)
        self.window.bind("<G>", self.reset_game)

        self.window.bind("<A>",self.gameAI.gameStart)
        self.window.bind("<a>",self.gameAI.gameStart)
        
        self.draw_board()

    def draw_board(self):
        for i in range(1, 3):
            self.canvas.create_line(i * 200, 0, i * 200, 600)
            self.canvas.create_line(0, i * 200, 600, i * 200)

    def reset_game(self, event=None):
        self.logic.reset()
        self.canvas.delete("all")
        self.draw_board()
        self.label_turn.config(text="X goes now")
        self.label_instructions.config(text="Select the box and press or press 'a' for playing with AI")

        self.canvas.bind("<Button-1>", self.click_box)
        self.window.bind("<A>",self.gameAI)
        self.window.bind("<a>",self.gameAI)

    def click_box(self, event):

        self.canvas.unbind("<A>",self.gameAI)
        self.canvas.unbind("<a>",self.gameAI)

        row = int(event.y / 200)
        col = int(event.x / 200)

        if not self.logic.make_move(row, col):
            self.label_turn.config(text="It have already selected")
            return

        symbol = self.logic.symbol
        self.canvas.create_text((col + 1) * 200 - 100, (row + 1) * 200 - 100,
                                text=symbol, font=("Arial", 100), fill="black")

        if self.logic.check_winner():
            self.label_turn.config(text=f"{symbol} wins!")
            self.canvas.unbind("<Button-1>")
            self.logic.save_game(result=f"{symbol}_wins")
        elif self.logic.count == 9:
            self.label_turn.config(text="It's a tie!")
            self.canvas.unbind("<Button-1>")
            self.logic.save_game(result="tie")
        else:
            next_symbol = "X" if symbol == "O" else "O"
            self.label_turn.config(text=f"{next_symbol} goes now")

        self.label_instructions.config(text="Press 'G' to continue playing")

    def run(self):
        self.window.mainloop()

if __name__ == "__main__":
    game = TrainGame()
    game.run()
